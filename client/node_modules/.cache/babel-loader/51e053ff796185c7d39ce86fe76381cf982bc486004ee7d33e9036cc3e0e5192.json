{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twj23\\\\Desktop\\\\Developer\\\\Games\\\\Multiplayer Blackjack Copy\\\\client\\\\src\\\\components\\\\PlayerControls.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useGame } from '../contexts/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 1rem;\n  background-color: rgba(30, 30, 46, 0.8);\n  border-radius: 10px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n`;\n_c = ControlsContainer;\nconst ActionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n  width: 100%;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 600px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n_c2 = ActionsGrid;\nconst ActionButton = styled.button`\n  padding: 0.8rem 0;\n  border-radius: 5px;\n  border: none;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-3px);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  \n  svg {\n    margin-bottom: 5px;\n    font-size: 1.2rem;\n  }\n`;\nconst HitButton = styled(ActionButton)`\n  background-color: #4caf50;\n  color: white;\n`;\n_c3 = HitButton;\nconst StandButton = styled(ActionButton)`\n  background-color: #f44336;\n  color: white;\n`;\n_c4 = StandButton;\nconst DoubleButton = styled(ActionButton)`\n  background-color: #2196f3;\n  color: white;\n`;\n_c5 = DoubleButton;\nconst SplitButton = styled(ActionButton)`\n  background-color: #ff9800;\n  color: white;\n`;\n_c6 = SplitButton;\nconst SurrenderButton = styled(ActionButton)`\n  background-color: #9e9e9e;\n  color: white;\n`;\n_c7 = SurrenderButton;\nconst NewRoundButton = styled(ActionButton)`\n  background-color: #9c27b0;\n  color: white;\n  grid-column: span 2;\n`;\n_c8 = NewRoundButton;\nconst Icon = styled.span`\n  font-size: 1.5rem;\n  margin-bottom: 5px;\n`;\n_c9 = Icon;\nconst ButtonText = styled.span`\n  font-size: 0.9rem;\n`;\n_c10 = ButtonText;\nconst HintContainer = styled.div`\n  background-color: rgba(226, 183, 20, 0.9);\n  color: #000;\n  padding: 10px 15px;\n  border-radius: 5px;\n  margin-bottom: 15px;\n  font-weight: 600;\n  text-align: center;\n  animation: fadeIn 0.5s ease-in;\n  \n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n`;\n_c11 = HintContainer;\nconst PlayerControls = ({\n  currentPlayer,\n  canSplit\n}) => {\n  _s2();\n  var _s = $RefreshSig$(),\n    _currentPlayer$id,\n    _currentPlayer$cards;\n  const {\n    hit,\n    stand,\n    doubleDown,\n    split,\n    surrender,\n    startNewRound,\n    gameState,\n    isPlayerTurn,\n    hintsEnabled\n  } = useGame();\n  const [showHint, setShowHint] = useState(false);\n  const [hint, setHint] = useState('');\n\n  // Timer for showing hints\n  useEffect(() => {\n    // Only show hints if enabled\n    if (!hintsEnabled) {\n      setShowHint(false);\n      return;\n    }\n    const timer = setTimeout(() => {\n      if (currentPlayer && isPlayerTurn()) {\n        const hintText = getStrategyHint(currentPlayer);\n        setHint(hintText);\n        setShowHint(true);\n      }\n    }, 10000); // 10 seconds\n\n    return () => clearTimeout(timer);\n  }, [currentPlayer, isPlayerTurn, hintsEnabled]);\n\n  // Reset hint when player makes a move\n  const handleAction = action => {\n    setShowHint(false);\n    action();\n  };\n\n  // Get strategy hint based on player's hand and dealer's upcard\n  const getStrategyHint = player => {\n    if (!player || !player.cards || player.cards.length === 0) return '';\n\n    // Get dealer's upcard value\n    const dealerUpcard = getDealerUpcard();\n    if (!dealerUpcard) return '';\n\n    // Check if player has a pair\n    const isPair = player.cards.length === 2 && getValue(player.cards[0]) === getValue(player.cards[1]);\n\n    // Check if player has a soft hand (contains an Ace counted as 11)\n    const hasSoftHand = player.cards.some(card => card.value === 'A') && player.score <= 21;\n    if (isPair) {\n      return getPairHint(getValue(player.cards[0]), dealerUpcard);\n    } else if (hasSoftHand) {\n      return getSoftTotalHint(player.score, dealerUpcard);\n    } else {\n      return getHardTotalHint(player.score, dealerUpcard);\n    }\n  };\n\n  // Get dealer's upcard value\n  const getDealerUpcard = () => {\n    _s();\n    const {\n      dealer\n    } = useGame();\n    if (!dealer || !dealer.cards || dealer.cards.length === 0) return null;\n    const card = dealer.cards[0];\n    return getValue(card);\n  };\n\n  // Convert card value to numeric value\n  _s(getDealerUpcard, \"G7Y7TfpMYhemwcM7VxrRMDOZH5Y=\", false, function () {\n    return [useGame];\n  });\n  const getValue = card => {\n    if (!card || !card.value) return 0;\n    if (['J', 'Q', 'K'].includes(card.value)) return 10;\n    if (card.value === 'A') return 11;\n    return parseInt(card.value, 10);\n  };\n\n  // Get hint for pair hands\n  const getPairHint = (pairValue, dealerUpcard) => {\n    if (pairValue === 11) return 'Always split Aces.';\n    if (pairValue === 10) return 'Never split Tens.';\n    if (pairValue === 9) {\n      if ([2, 3, 4, 5, 6, 8, 9].includes(dealerUpcard)) return 'Split 9s against dealer 2-6, 8-9.';\n      return 'Stand with 9s against dealer 7, 10, or Ace.';\n    }\n    if (pairValue === 8) return 'Always split 8s.';\n    if (pairValue === 7) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 7) return 'Split 7s against dealer 2-7.';\n      return 'Hit with 7s against dealer 8-Ace.';\n    }\n    if (pairValue === 6) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 6) return 'Split 6s against dealer 2-6.';\n      return 'Hit with 6s against dealer 7-Ace.';\n    }\n    if (pairValue === 5) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 9) return 'Double with 5s against dealer 2-9.';\n      return 'Hit with 5s against dealer 10-Ace.';\n    }\n    if (pairValue === 4) {\n      if (dealerUpcard === 5 || dealerUpcard === 6) return 'Split 4s against dealer 5-6.';\n      return 'Hit with 4s against other dealer cards.';\n    }\n    if (pairValue === 3 || pairValue === 2) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 7) return `Split ${pairValue}s against dealer 2-7.`;\n      return `Hit with ${pairValue}s against dealer 8-Ace.`;\n    }\n    return '';\n  };\n\n  // Get hint for soft totals\n  const getSoftTotalHint = (total, dealerUpcard) => {\n    if (total >= 20) return 'Stand with Soft 20.';\n    if (total === 19) {\n      if (dealerUpcard === 6) return 'Double with Soft 19 against dealer 6.';\n      return 'Stand with Soft 19.';\n    }\n    if (total === 18) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 6) return 'Double with Soft 18 against dealer 2-6.';\n      if (dealerUpcard >= 9 || dealerUpcard === 11) return 'Hit with Soft 18 against dealer 9-Ace.';\n      return 'Stand with Soft 18 against dealer 7-8.';\n    }\n    if (total === 17) {\n      if (dealerUpcard >= 3 && dealerUpcard <= 6) return 'Double with Soft 17 against dealer 3-6.';\n      return 'Hit with Soft 17 against other dealer cards.';\n    }\n    if (total === 16) {\n      if (dealerUpcard >= 4 && dealerUpcard <= 6) return 'Double with Soft 16 against dealer 4-6.';\n      return 'Hit with Soft 16 against other dealer cards.';\n    }\n    if (total === 15) {\n      if (dealerUpcard >= 4 && dealerUpcard <= 6) return 'Double with Soft 15 against dealer 4-6.';\n      return 'Hit with Soft 15 against other dealer cards.';\n    }\n    if (total === 14) {\n      if (dealerUpcard === 5 || dealerUpcard === 6) return 'Double with Soft 14 against dealer 5-6.';\n      return 'Hit with Soft 14 against other dealer cards.';\n    }\n    if (total === 13) {\n      if (dealerUpcard === 5 || dealerUpcard === 6) return 'Double with Soft 13 against dealer 5-6.';\n      return 'Hit with Soft 13 against other dealer cards.';\n    }\n    return 'Hit with this soft total.';\n  };\n\n  // Get hint for hard totals\n  const getHardTotalHint = (total, dealerUpcard) => {\n    if (total >= 17) return 'Stand with 17 or higher.';\n    if (total >= 13 && total <= 16) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 6) return `Stand with ${total} against dealer 2-6.`;\n      return `Hit with ${total} against dealer 7-Ace.`;\n    }\n    if (total === 12) {\n      if (dealerUpcard >= 4 && dealerUpcard <= 6) return 'Stand with 12 against dealer 4-6.';\n      return 'Hit with 12 against dealer 2-3, 7-Ace.';\n    }\n    if (total === 11) return 'Always double with 11.';\n    if (total === 10) {\n      if (dealerUpcard >= 2 && dealerUpcard <= 9) return 'Double with 10 against dealer 2-9.';\n      return 'Hit with 10 against dealer 10-Ace.';\n    }\n    if (total === 9) {\n      if (dealerUpcard >= 3 && dealerUpcard <= 6) return 'Double with 9 against dealer 3-6.';\n      return 'Hit with 9 against other dealer cards.';\n    }\n    return 'Hit with 8 or lower.';\n  };\n\n  // Check if it's the player's turn directly\n  const playerTurn = isPlayerTurn();\n\n  // Check if this is a split hand\n  const isSplitHand = currentPlayer === null || currentPlayer === void 0 ? void 0 : (_currentPlayer$id = currentPlayer.id) === null || _currentPlayer$id === void 0 ? void 0 : _currentPlayer$id.includes('-split');\n  const isFirstAction = (currentPlayer === null || currentPlayer === void 0 ? void 0 : (_currentPlayer$cards = currentPlayer.cards) === null || _currentPlayer$cards === void 0 ? void 0 : _currentPlayer$cards.length) === 2;\n  const isGameEnded = gameState === 'ended';\n\n  // Check if player can double down (only with first 2 cards)\n  const canDoubleDown = playerTurn && isFirstAction;\n\n  // Check if player can surrender (only as first action)\n  const canSurrender = playerTurn && isFirstAction;\n\n  // Can't split a split hand\n  const canSplitHand = canSplit && !isSplitHand;\n  return /*#__PURE__*/_jsxDEV(ControlsContainer, {\n    children: [showHint && hint && /*#__PURE__*/_jsxDEV(HintContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"hint\",\n        children: \"\\uD83D\\uDCA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), \" \", hint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ActionsGrid, {\n      children: isGameEnded ? /*#__PURE__*/_jsxDEV(NewRoundButton, {\n        onClick: startNewRound,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n          children: \"New Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(HitButton, {\n          onClick: () => handleAction(hit),\n          disabled: !playerTurn,\n          title: \"Draw another card\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uD83D\\uDC46\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Hit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StandButton, {\n          onClick: () => handleAction(stand),\n          disabled: !playerTurn,\n          title: \"End your turn\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\u270B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Stand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DoubleButton, {\n          onClick: () => handleAction(doubleDown),\n          disabled: !playerTurn || !canDoubleDown,\n          title: \"Double your bet and receive one more card\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uD83D\\uDCB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Double\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SplitButton, {\n          onClick: () => handleAction(split),\n          disabled: !playerTurn || !canSplitHand,\n          title: \"Split your pair into two hands\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\u2702\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Split\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SurrenderButton, {\n          onClick: () => handleAction(surrender),\n          disabled: !playerTurn || !canSurrender,\n          title: \"Forfeit half your bet and end your hand\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uD83C\\uDFF3\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Surrender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s2(PlayerControls, \"lRKGHUSDgGdlz2YtfkOf0tjwdhk=\", false, function () {\n  return [useGame];\n});\n_c12 = PlayerControls;\nexport default PlayerControls;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"ControlsContainer\");\n$RefreshReg$(_c2, \"ActionsGrid\");\n$RefreshReg$(_c3, \"HitButton\");\n$RefreshReg$(_c4, \"StandButton\");\n$RefreshReg$(_c5, \"DoubleButton\");\n$RefreshReg$(_c6, \"SplitButton\");\n$RefreshReg$(_c7, \"SurrenderButton\");\n$RefreshReg$(_c8, \"NewRoundButton\");\n$RefreshReg$(_c9, \"Icon\");\n$RefreshReg$(_c10, \"ButtonText\");\n$RefreshReg$(_c11, \"HintContainer\");\n$RefreshReg$(_c12, \"PlayerControls\");","map":{"version":3,"names":["React","useState","useEffect","styled","useGame","jsxDEV","_jsxDEV","Fragment","_Fragment","ControlsContainer","div","_c","ActionsGrid","_c2","ActionButton","button","HitButton","_c3","StandButton","_c4","DoubleButton","_c5","SplitButton","_c6","SurrenderButton","_c7","NewRoundButton","_c8","Icon","span","_c9","ButtonText","_c10","HintContainer","_c11","PlayerControls","currentPlayer","canSplit","_s2","_s","$RefreshSig$","_currentPlayer$id","_currentPlayer$cards","hit","stand","doubleDown","split","surrender","startNewRound","gameState","isPlayerTurn","hintsEnabled","showHint","setShowHint","hint","setHint","timer","setTimeout","hintText","getStrategyHint","clearTimeout","handleAction","action","player","cards","length","dealerUpcard","getDealerUpcard","isPair","getValue","hasSoftHand","some","card","value","score","getPairHint","getSoftTotalHint","getHardTotalHint","dealer","includes","parseInt","pairValue","total","playerTurn","isSplitHand","id","isFirstAction","isGameEnded","canDoubleDown","canSurrender","canSplitHand","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","_c12","$RefreshReg$"],"sources":["C:/Users/twj23/Desktop/Developer/Games/Multiplayer Blackjack Copy/client/src/components/PlayerControls.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../contexts/GameContext';\r\n\r\nconst ControlsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n  background-color: rgba(30, 30, 46, 0.8);\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst ActionsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 10px;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  \r\n  @media (max-width: 600px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  padding: 0.8rem 0;\r\n  border-radius: 5px;\r\n  border: none;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover:not(:disabled) {\r\n    transform: translateY(-3px);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  svg {\r\n    margin-bottom: 5px;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst HitButton = styled(ActionButton)`\r\n  background-color: #4caf50;\r\n  color: white;\r\n`;\r\n\r\nconst StandButton = styled(ActionButton)`\r\n  background-color: #f44336;\r\n  color: white;\r\n`;\r\n\r\nconst DoubleButton = styled(ActionButton)`\r\n  background-color: #2196f3;\r\n  color: white;\r\n`;\r\n\r\nconst SplitButton = styled(ActionButton)`\r\n  background-color: #ff9800;\r\n  color: white;\r\n`;\r\n\r\nconst SurrenderButton = styled(ActionButton)`\r\n  background-color: #9e9e9e;\r\n  color: white;\r\n`;\r\n\r\nconst NewRoundButton = styled(ActionButton)`\r\n  background-color: #9c27b0;\r\n  color: white;\r\n  grid-column: span 2;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ButtonText = styled.span`\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst HintContainer = styled.div`\r\n  background-color: rgba(226, 183, 20, 0.9);\r\n  color: #000;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  margin-bottom: 15px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  animation: fadeIn 0.5s ease-in;\r\n  \r\n  @keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n  }\r\n`;\r\n\r\nconst PlayerControls = ({ currentPlayer, canSplit }) => {\r\n  const { \r\n    hit, \r\n    stand, \r\n    doubleDown, \r\n    split, \r\n    surrender, \r\n    startNewRound, \r\n    gameState, \r\n    isPlayerTurn,\r\n    hintsEnabled\r\n  } = useGame();\r\n  \r\n  const [showHint, setShowHint] = useState(false);\r\n  const [hint, setHint] = useState('');\r\n  \r\n  // Timer for showing hints\r\n  useEffect(() => {\r\n    // Only show hints if enabled\r\n    if (!hintsEnabled) {\r\n      setShowHint(false);\r\n      return;\r\n    }\r\n    \r\n    const timer = setTimeout(() => {\r\n      if (currentPlayer && isPlayerTurn()) {\r\n        const hintText = getStrategyHint(currentPlayer);\r\n        setHint(hintText);\r\n        setShowHint(true);\r\n      }\r\n    }, 10000); // 10 seconds\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [currentPlayer, isPlayerTurn, hintsEnabled]);\r\n  \r\n  // Reset hint when player makes a move\r\n  const handleAction = (action) => {\r\n    setShowHint(false);\r\n    action();\r\n  };\r\n  \r\n  // Get strategy hint based on player's hand and dealer's upcard\r\n  const getStrategyHint = (player) => {\r\n    if (!player || !player.cards || player.cards.length === 0) return '';\r\n    \r\n    // Get dealer's upcard value\r\n    const dealerUpcard = getDealerUpcard();\r\n    if (!dealerUpcard) return '';\r\n    \r\n    // Check if player has a pair\r\n    const isPair = player.cards.length === 2 && \r\n                  getValue(player.cards[0]) === getValue(player.cards[1]);\r\n    \r\n    // Check if player has a soft hand (contains an Ace counted as 11)\r\n    const hasSoftHand = player.cards.some(card => card.value === 'A') && \r\n                        player.score <= 21;\r\n    \r\n    if (isPair) {\r\n      return getPairHint(getValue(player.cards[0]), dealerUpcard);\r\n    } else if (hasSoftHand) {\r\n      return getSoftTotalHint(player.score, dealerUpcard);\r\n    } else {\r\n      return getHardTotalHint(player.score, dealerUpcard);\r\n    }\r\n  };\r\n  \r\n  // Get dealer's upcard value\r\n  const getDealerUpcard = () => {\r\n    const { dealer } = useGame();\r\n    if (!dealer || !dealer.cards || dealer.cards.length === 0) return null;\r\n    \r\n    const card = dealer.cards[0];\r\n    return getValue(card);\r\n  };\r\n  \r\n  // Convert card value to numeric value\r\n  const getValue = (card) => {\r\n    if (!card || !card.value) return 0;\r\n    \r\n    if (['J', 'Q', 'K'].includes(card.value)) return 10;\r\n    if (card.value === 'A') return 11;\r\n    return parseInt(card.value, 10);\r\n  };\r\n  \r\n  // Get hint for pair hands\r\n  const getPairHint = (pairValue, dealerUpcard) => {\r\n    if (pairValue === 11) return 'Always split Aces.';\r\n    if (pairValue === 10) return 'Never split Tens.';\r\n    \r\n    if (pairValue === 9) {\r\n      if ([2, 3, 4, 5, 6, 8, 9].includes(dealerUpcard)) return 'Split 9s against dealer 2-6, 8-9.';\r\n      return 'Stand with 9s against dealer 7, 10, or Ace.';\r\n    }\r\n    \r\n    if (pairValue === 8) return 'Always split 8s.';\r\n    \r\n    if (pairValue === 7) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 7) return 'Split 7s against dealer 2-7.';\r\n      return 'Hit with 7s against dealer 8-Ace.';\r\n    }\r\n    \r\n    if (pairValue === 6) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 6) return 'Split 6s against dealer 2-6.';\r\n      return 'Hit with 6s against dealer 7-Ace.';\r\n    }\r\n    \r\n    if (pairValue === 5) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 9) return 'Double with 5s against dealer 2-9.';\r\n      return 'Hit with 5s against dealer 10-Ace.';\r\n    }\r\n    \r\n    if (pairValue === 4) {\r\n      if (dealerUpcard === 5 || dealerUpcard === 6) return 'Split 4s against dealer 5-6.';\r\n      return 'Hit with 4s against other dealer cards.';\r\n    }\r\n    \r\n    if (pairValue === 3 || pairValue === 2) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 7) return `Split ${pairValue}s against dealer 2-7.`;\r\n      return `Hit with ${pairValue}s against dealer 8-Ace.`;\r\n    }\r\n    \r\n    return '';\r\n  };\r\n  \r\n  // Get hint for soft totals\r\n  const getSoftTotalHint = (total, dealerUpcard) => {\r\n    if (total >= 20) return 'Stand with Soft 20.';\r\n    \r\n    if (total === 19) {\r\n      if (dealerUpcard === 6) return 'Double with Soft 19 against dealer 6.';\r\n      return 'Stand with Soft 19.';\r\n    }\r\n    \r\n    if (total === 18) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 6) return 'Double with Soft 18 against dealer 2-6.';\r\n      if (dealerUpcard >= 9 || dealerUpcard === 11) return 'Hit with Soft 18 against dealer 9-Ace.';\r\n      return 'Stand with Soft 18 against dealer 7-8.';\r\n    }\r\n    \r\n    if (total === 17) {\r\n      if (dealerUpcard >= 3 && dealerUpcard <= 6) return 'Double with Soft 17 against dealer 3-6.';\r\n      return 'Hit with Soft 17 against other dealer cards.';\r\n    }\r\n    \r\n    if (total === 16) {\r\n      if (dealerUpcard >= 4 && dealerUpcard <= 6) return 'Double with Soft 16 against dealer 4-6.';\r\n      return 'Hit with Soft 16 against other dealer cards.';\r\n    }\r\n    \r\n    if (total === 15) {\r\n      if (dealerUpcard >= 4 && dealerUpcard <= 6) return 'Double with Soft 15 against dealer 4-6.';\r\n      return 'Hit with Soft 15 against other dealer cards.';\r\n    }\r\n    \r\n    if (total === 14) {\r\n      if (dealerUpcard === 5 || dealerUpcard === 6) return 'Double with Soft 14 against dealer 5-6.';\r\n      return 'Hit with Soft 14 against other dealer cards.';\r\n    }\r\n    \r\n    if (total === 13) {\r\n      if (dealerUpcard === 5 || dealerUpcard === 6) return 'Double with Soft 13 against dealer 5-6.';\r\n      return 'Hit with Soft 13 against other dealer cards.';\r\n    }\r\n    \r\n    return 'Hit with this soft total.';\r\n  };\r\n  \r\n  // Get hint for hard totals\r\n  const getHardTotalHint = (total, dealerUpcard) => {\r\n    if (total >= 17) return 'Stand with 17 or higher.';\r\n    \r\n    if (total >= 13 && total <= 16) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 6) return `Stand with ${total} against dealer 2-6.`;\r\n      return `Hit with ${total} against dealer 7-Ace.`;\r\n    }\r\n    \r\n    if (total === 12) {\r\n      if (dealerUpcard >= 4 && dealerUpcard <= 6) return 'Stand with 12 against dealer 4-6.';\r\n      return 'Hit with 12 against dealer 2-3, 7-Ace.';\r\n    }\r\n    \r\n    if (total === 11) return 'Always double with 11.';\r\n    \r\n    if (total === 10) {\r\n      if (dealerUpcard >= 2 && dealerUpcard <= 9) return 'Double with 10 against dealer 2-9.';\r\n      return 'Hit with 10 against dealer 10-Ace.';\r\n    }\r\n    \r\n    if (total === 9) {\r\n      if (dealerUpcard >= 3 && dealerUpcard <= 6) return 'Double with 9 against dealer 3-6.';\r\n      return 'Hit with 9 against other dealer cards.';\r\n    }\r\n    \r\n    return 'Hit with 8 or lower.';\r\n  };\r\n  \r\n  // Check if it's the player's turn directly\r\n  const playerTurn = isPlayerTurn();\r\n  \r\n  // Check if this is a split hand\r\n  const isSplitHand = currentPlayer?.id?.includes('-split');\r\n  \r\n  const isFirstAction = currentPlayer?.cards?.length === 2;\r\n  const isGameEnded = gameState === 'ended';\r\n  \r\n  // Check if player can double down (only with first 2 cards)\r\n  const canDoubleDown = playerTurn && isFirstAction;\r\n  \r\n  // Check if player can surrender (only as first action)\r\n  const canSurrender = playerTurn && isFirstAction;\r\n  \r\n  // Can't split a split hand\r\n  const canSplitHand = canSplit && !isSplitHand;\r\n  \r\n  return (\r\n    <ControlsContainer>\r\n      {showHint && hint && (\r\n        <HintContainer>\r\n          <span role=\"img\" aria-label=\"hint\">💡</span> {hint}\r\n        </HintContainer>\r\n      )}\r\n      \r\n      <ActionsGrid>\r\n        {isGameEnded ? (\r\n          <NewRoundButton onClick={startNewRound}>\r\n            <Icon>🔄</Icon>\r\n            <ButtonText>New Round</ButtonText>\r\n          </NewRoundButton>\r\n        ) : (\r\n          <>\r\n            <HitButton \r\n              onClick={() => handleAction(hit)} \r\n              disabled={!playerTurn}\r\n              title=\"Draw another card\"\r\n            >\r\n              <Icon>👆</Icon>\r\n              <ButtonText>Hit</ButtonText>\r\n            </HitButton>\r\n            \r\n            <StandButton \r\n              onClick={() => handleAction(stand)} \r\n              disabled={!playerTurn}\r\n              title=\"End your turn\"\r\n            >\r\n              <Icon>✋</Icon>\r\n              <ButtonText>Stand</ButtonText>\r\n            </StandButton>\r\n            \r\n            <DoubleButton \r\n              onClick={() => handleAction(doubleDown)} \r\n              disabled={!playerTurn || !canDoubleDown}\r\n              title=\"Double your bet and receive one more card\"\r\n            >\r\n              <Icon>💰</Icon>\r\n              <ButtonText>Double</ButtonText>\r\n            </DoubleButton>\r\n            \r\n            <SplitButton \r\n              onClick={() => handleAction(split)} \r\n              disabled={!playerTurn || !canSplitHand}\r\n              title=\"Split your pair into two hands\"\r\n            >\r\n              <Icon>✂️</Icon>\r\n              <ButtonText>Split</ButtonText>\r\n            </SplitButton>\r\n            \r\n            <SurrenderButton \r\n              onClick={() => handleAction(surrender)} \r\n              disabled={!playerTurn || !canSurrender}\r\n              title=\"Forfeit half your bet and end your hand\"\r\n            >\r\n              <Icon>🏳️</Icon>\r\n              <ButtonText>Surrender</ButtonText>\r\n            </SurrenderButton>\r\n          </>\r\n        )}\r\n      </ActionsGrid>\r\n    </ControlsContainer>\r\n  );\r\n};\r\n\r\nexport default PlayerControls; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}