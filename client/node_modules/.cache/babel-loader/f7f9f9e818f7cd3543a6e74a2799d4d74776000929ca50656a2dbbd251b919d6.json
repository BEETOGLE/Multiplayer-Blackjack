{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twj23\\\\Desktop\\\\Developer\\\\Games\\\\Multiplayer Blackjack\\\\client\\\\src\\\\components\\\\DealerArea.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DealerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  position: relative;\n`;\n_c = DealerContainer;\nconst DealerTitle = styled.div`\n  font-size: 1.2rem;\n  font-weight: 600;\n  padding: 6px 16px;\n  margin-bottom: 15px;\n  background-color: #333;\n  color: white;\n  border-radius: 20px;\n  text-align: center;\n`;\n_c2 = DealerTitle;\nconst RuleChip = styled.div`\n  position: absolute;\n  top: 50px;\n  right: -50px;\n  background-color: #1e1e2e;\n  color: #aaa;\n  padding: 4px 10px;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  font-style: italic;\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '📝';\n    margin-right: 5px;\n  }\n`;\n_c3 = RuleChip;\nconst DealerCardArea = styled.div`\n  display: flex;\n  justify-content: center;\n  min-height: 130px;\n  margin-bottom: 10px;\n`;\n_c4 = DealerCardArea;\nconst ScoreChip = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 55%;\n  background-color: #2c2c44;\n  color: ${props => props.$score > 21 ? '#f44336' : 'white'};\n  border: 1px solid #444;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 0.9rem;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n`;\n_c5 = ScoreChip;\nconst DealerArea = ({\n  dealer,\n  gameState,\n  currentTurn\n}) => {\n  const {\n    cards,\n    score\n  } = dealer;\n\n  // Only show the hole card when the game is ended or when it's the dealer's turn\n  const showHoleCard = gameState === 'ended' || currentTurn === 'dealer';\n\n  // This function likely handles player turns\n  const handlePlayerTurn = action => {\n    // Check if it's actually the player's turn\n    if (currentTurn !== 'player') {\n      return; // This might be preventing player actions\n    }\n\n    // Process the player's action (hit, stand, etc.)\n    switch (action) {\n      case 'hit':\n        // Hit logic\n        break;\n      case 'stand':\n        // Stand logic\n        break;\n      case 'double':\n        // Double logic\n        break;\n      // ... other actions\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DealerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DealerTitle, {\n      children: \"Dealer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RuleChip, {\n      children: \"Stands on 17\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DealerCardArea, {\n      children: cards && cards.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          card: cards[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), cards.length > 1 && (showHoleCard ? /*#__PURE__*/_jsxDEV(Card, {\n          card: cards[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this)), cards.length > 2 && cards.slice(2).map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n          card: card\n        }, index + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), score > 0 && showHoleCard && /*#__PURE__*/_jsxDEV(ScoreChip, {\n      $score: score,\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerTurn('hit'),\n        disabled: currentTurn !== 'player' // This condition might be wrong\n        ,\n        children: \"Hit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerTurn('stand'),\n        disabled: currentTurn !== 'player' // This condition might be wrong\n        ,\n        children: \"Stand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c6 = DealerArea;\nexport default DealerArea;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"DealerContainer\");\n$RefreshReg$(_c2, \"DealerTitle\");\n$RefreshReg$(_c3, \"RuleChip\");\n$RefreshReg$(_c4, \"DealerCardArea\");\n$RefreshReg$(_c5, \"ScoreChip\");\n$RefreshReg$(_c6, \"DealerArea\");","map":{"version":3,"names":["React","styled","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","DealerContainer","div","_c","DealerTitle","_c2","RuleChip","_c3","DealerCardArea","_c4","ScoreChip","props","$score","_c5","DealerArea","dealer","gameState","currentTurn","cards","score","showHoleCard","handlePlayerTurn","action","children","fileName","_jsxFileName","lineNumber","columnNumber","length","card","hidden","slice","map","index","className","onClick","disabled","_c6","$RefreshReg$"],"sources":["C:/Users/twj23/Desktop/Developer/Games/Multiplayer Blackjack/client/src/components/DealerArea.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\n\r\nconst DealerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  position: relative;\r\n`;\r\n\r\nconst DealerTitle = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  padding: 6px 16px;\r\n  margin-bottom: 15px;\r\n  background-color: #333;\r\n  color: white;\r\n  border-radius: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst RuleChip = styled.div`\r\n  position: absolute;\r\n  top: 50px;\r\n  right: -50px;\r\n  background-color: #1e1e2e;\r\n  color: #aaa;\r\n  padding: 4px 10px;\r\n  border-radius: 20px;\r\n  font-size: 0.9rem;\r\n  font-style: italic;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  &::before {\r\n    content: '📝';\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nconst DealerCardArea = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  min-height: 130px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ScoreChip = styled.div`\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 55%;\r\n  background-color: #2c2c44;\r\n  color: ${props => props.$score > 21 ? '#f44336' : 'white'};\r\n  border: 1px solid #444;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst DealerArea = ({ dealer, gameState, currentTurn }) => {\r\n  const { cards, score } = dealer;\r\n  \r\n  // Only show the hole card when the game is ended or when it's the dealer's turn\r\n  const showHoleCard = gameState === 'ended' || currentTurn === 'dealer';\r\n  \r\n  // This function likely handles player turns\r\n  const handlePlayerTurn = (action) => {\r\n    // Check if it's actually the player's turn\r\n    if (currentTurn !== 'player') {\r\n      return; // This might be preventing player actions\r\n    }\r\n\r\n    // Process the player's action (hit, stand, etc.)\r\n    switch(action) {\r\n      case 'hit':\r\n        // Hit logic\r\n        break;\r\n      case 'stand':\r\n        // Stand logic\r\n        break;\r\n      case 'double':\r\n        // Double logic\r\n        break;\r\n      // ... other actions\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DealerContainer>\r\n      <DealerTitle>Dealer</DealerTitle>\r\n      <RuleChip>Stands on 17</RuleChip>\r\n      \r\n      <DealerCardArea>\r\n        {cards && cards.length > 0 ? (\r\n          <>\r\n            {/* First card (face up) */}\r\n            <Card card={cards[0]} />\r\n            \r\n            {/* Second card (hole card) - hidden until dealer's turn or game ended */}\r\n            {cards.length > 1 && (\r\n              showHoleCard \r\n                ? <Card card={cards[1]} /> \r\n                : <Card hidden={true} />\r\n            )}\r\n            \r\n            {/* Any additional cards */}\r\n            {cards.length > 2 && cards.slice(2).map((card, index) => (\r\n              <Card key={index + 2} card={card} />\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </DealerCardArea>\r\n      \r\n      {score > 0 && showHoleCard && (\r\n        <ScoreChip $score={score}>{score}</ScoreChip>\r\n      )}\r\n\r\n      {/* The buttons might be disabled incorrectly */}\r\n      <div className=\"player-actions\">\r\n        <button \r\n          onClick={() => handlePlayerTurn('hit')}\r\n          disabled={currentTurn !== 'player'} // This condition might be wrong\r\n        >\r\n          Hit\r\n        </button>\r\n        <button \r\n          onClick={() => handlePlayerTurn('stand')}\r\n          disabled={currentTurn !== 'player'} // This condition might be wrong\r\n        >\r\n          Stand\r\n        </button>\r\n        {/* ... other buttons */}\r\n      </div>\r\n    </DealerContainer>\r\n  );\r\n};\r\n\r\nexport default DealerArea; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}