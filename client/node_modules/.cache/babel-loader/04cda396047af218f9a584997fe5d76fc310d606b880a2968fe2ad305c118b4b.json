{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twj23\\\\Desktop\\\\Developer\\\\Games\\\\Multiplayer Blackjack\\\\client\\\\src\\\\components\\\\PlayerSeat.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 200px;\n  position: relative;\n`;\n_c = SeatContainer;\nconst UsernameDisplay = styled.div`\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 5px 12px;\n  margin-bottom: 5px;\n  background-color: ${props => props.isCurrentPlayer ? '#4caf50' : '#333'};\n  color: white;\n  border-radius: 20px;\n  text-align: center;\n  min-width: 100px;\n`;\n_c2 = UsernameDisplay;\nconst BalanceDisplay = styled.div`\n  font-size: 0.9rem;\n  padding: 4px 10px;\n  background-color: #2c2c44;\n  color: #e2b714;\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\n_c3 = BalanceDisplay;\nconst CardArea = styled.div`\n  display: flex;\n  justify-content: center;\n  min-height: 130px;\n  margin-bottom: 10px;\n`;\n_c4 = CardArea;\nconst BetCircle = styled.div`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  background-color: ${props => props.active ? 'rgba(76, 175, 80, 0.3)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 2px solid ${props => props.active ? '#4caf50' : '#444'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-top: 10px;\n`;\n_c5 = BetCircle;\nconst BetAmount = styled.div`\n  background-color: #e2b714;\n  color: #000;\n  font-weight: bold;\n  padding: 3px 8px;\n  border-radius: 12px;\n  font-size: 0.9rem;\n  position: absolute;\n  top: -15px;\n`;\n_c6 = BetAmount;\nconst ScoreChip = styled.div`\n  position: absolute;\n  top: 45px;\n  left: 175px;\n  background-color: #2c2c44;\n  color: ${props => props.score > 21 ? '#f44336' : props.score === 21 ? '#e2b714' : 'white'};\n  border: 1px solid ${props => props.score > 21 ? '#f44336' : props.score === 21 ? '#e2b714' : '#444'};\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 0.9rem;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n`;\n_c7 = ScoreChip;\nconst StatusBadge = styled.div`\n  position: absolute;\n  top: 95px;\n  right: 20px;\n  background-color: ${props => {\n  if (props.status === 'busted') return '#f44336';\n  if (props.status === 'blackjack') return '#e2b714';\n  if (props.status === 'stood') return '#2196f3';\n  if (props.status === 'surrendered') return '#757575';\n  return 'transparent';\n}};\n  color: white;\n  padding: 3px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  z-index: 5;\n`;\n_c8 = StatusBadge;\nconst YourTurnIndicator = styled.div`\n  position: absolute;\n  top: -10px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #e2b714;\n  color: #000;\n  padding: 3px 10px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  animation: pulse 1.5s infinite;\n  \n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 rgba(226, 183, 20, 0.7);\n    }\n    70% {\n      box-shadow: 0 0 0 10px rgba(226, 183, 20, 0);\n    }\n    100% {\n      box-shadow: 0 0 0 0 rgba(226, 183, 20, 0);\n    }\n  }\n`;\n_c9 = YourTurnIndicator;\nconst getStatusLabel = status => {\n  switch (status) {\n    case 'busted':\n      return 'Bust!';\n    case 'blackjack':\n      return 'Blackjack!';\n    case 'stood':\n      return 'Stand';\n    case 'surrendered':\n      return 'Fold';\n    default:\n      return '';\n  }\n};\nconst PlayerSeat = ({\n  player,\n  isCurrentPlayer,\n  isPlayerTurn,\n  gameState\n}) => {\n  if (!player) return /*#__PURE__*/_jsxDEV(SeatContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 23\n  }, this);\n  const {\n    username,\n    balance,\n    cards,\n    bet,\n    status,\n    score\n  } = player;\n  return /*#__PURE__*/_jsxDEV(SeatContainer, {\n    children: [isPlayerTurn && /*#__PURE__*/_jsxDEV(YourTurnIndicator, {\n      children: \"Your Turn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(UsernameDisplay, {\n      isCurrentPlayer: isCurrentPlayer,\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BalanceDisplay, {\n      children: [\"$\", balance.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardArea, {\n      children: cards && cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), score > 0 && /*#__PURE__*/_jsxDEV(ScoreChip, {\n      score: score,\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }, this), status && /*#__PURE__*/_jsxDEV(StatusBadge, {\n      status: status,\n      children: getStatusLabel(status)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(BetCircle, {\n      active: bet > 0,\n      children: bet > 0 && /*#__PURE__*/_jsxDEV(BetAmount, {\n        children: [\"$\", bet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_c10 = PlayerSeat;\nexport default PlayerSeat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"SeatContainer\");\n$RefreshReg$(_c2, \"UsernameDisplay\");\n$RefreshReg$(_c3, \"BalanceDisplay\");\n$RefreshReg$(_c4, \"CardArea\");\n$RefreshReg$(_c5, \"BetCircle\");\n$RefreshReg$(_c6, \"BetAmount\");\n$RefreshReg$(_c7, \"ScoreChip\");\n$RefreshReg$(_c8, \"StatusBadge\");\n$RefreshReg$(_c9, \"YourTurnIndicator\");\n$RefreshReg$(_c10, \"PlayerSeat\");","map":{"version":3,"names":["React","styled","Card","jsxDEV","_jsxDEV","SeatContainer","div","_c","UsernameDisplay","props","isCurrentPlayer","_c2","BalanceDisplay","_c3","CardArea","_c4","BetCircle","active","_c5","BetAmount","_c6","ScoreChip","score","_c7","StatusBadge","status","_c8","YourTurnIndicator","_c9","getStatusLabel","PlayerSeat","player","isPlayerTurn","gameState","fileName","_jsxFileName","lineNumber","columnNumber","username","balance","cards","bet","children","toLocaleString","map","card","index","_c10","$RefreshReg$"],"sources":["C:/Users/twj23/Desktop/Developer/Games/Multiplayer Blackjack/client/src/components/PlayerSeat.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\n\r\nconst SeatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 200px;\r\n  position: relative;\r\n`;\r\n\r\nconst UsernameDisplay = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  padding: 5px 12px;\r\n  margin-bottom: 5px;\r\n  background-color: ${props => props.isCurrentPlayer ? '#4caf50' : '#333'};\r\n  color: white;\r\n  border-radius: 20px;\r\n  text-align: center;\r\n  min-width: 100px;\r\n`;\r\n\r\nconst BalanceDisplay = styled.div`\r\n  font-size: 0.9rem;\r\n  padding: 4px 10px;\r\n  background-color: #2c2c44;\r\n  color: #e2b714;\r\n  border-radius: 4px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CardArea = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  min-height: 130px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst BetCircle = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.active ? 'rgba(76, 175, 80, 0.3)' : 'rgba(255, 255, 255, 0.1)'};\r\n  border: 2px solid ${props => props.active ? '#4caf50' : '#444'};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst BetAmount = styled.div`\r\n  background-color: #e2b714;\r\n  color: #000;\r\n  font-weight: bold;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-size: 0.9rem;\r\n  position: absolute;\r\n  top: -15px;\r\n`;\r\n\r\nconst ScoreChip = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  left: 175px;\r\n  background-color: #2c2c44;\r\n  color: ${props => props.score > 21 ? '#f44336' : props.score === 21 ? '#e2b714' : 'white'};\r\n  border: 1px solid ${props => props.score > 21 ? '#f44336' : props.score === 21 ? '#e2b714' : '#444'};\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst StatusBadge = styled.div`\r\n  position: absolute;\r\n  top: 95px;\r\n  right: 20px;\r\n  background-color: ${props => {\r\n    if (props.status === 'busted') return '#f44336';\r\n    if (props.status === 'blackjack') return '#e2b714';\r\n    if (props.status === 'stood') return '#2196f3';\r\n    if (props.status === 'surrendered') return '#757575';\r\n    return 'transparent';\r\n  }};\r\n  color: white;\r\n  padding: 3px 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  z-index: 5;\r\n`;\r\n\r\nconst YourTurnIndicator = styled.div`\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: #e2b714;\r\n  color: #000;\r\n  padding: 3px 10px;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  animation: pulse 1.5s infinite;\r\n  \r\n  @keyframes pulse {\r\n    0% {\r\n      box-shadow: 0 0 0 0 rgba(226, 183, 20, 0.7);\r\n    }\r\n    70% {\r\n      box-shadow: 0 0 0 10px rgba(226, 183, 20, 0);\r\n    }\r\n    100% {\r\n      box-shadow: 0 0 0 0 rgba(226, 183, 20, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst getStatusLabel = (status) => {\r\n  switch (status) {\r\n    case 'busted':\r\n      return 'Bust!';\r\n    case 'blackjack':\r\n      return 'Blackjack!';\r\n    case 'stood':\r\n      return 'Stand';\r\n    case 'surrendered':\r\n      return 'Fold';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst PlayerSeat = ({ \r\n  player, \r\n  isCurrentPlayer, \r\n  isPlayerTurn,\r\n  gameState\r\n}) => {\r\n  if (!player) return <SeatContainer />;\r\n  \r\n  const { username, balance, cards, bet, status, score } = player;\r\n  \r\n  return (\r\n    <SeatContainer>\r\n      {isPlayerTurn && <YourTurnIndicator>Your Turn</YourTurnIndicator>}\r\n      \r\n      <UsernameDisplay isCurrentPlayer={isCurrentPlayer}>\r\n        {username}\r\n      </UsernameDisplay>\r\n      \r\n      <BalanceDisplay>\r\n        ${balance.toLocaleString()}\r\n      </BalanceDisplay>\r\n      \r\n      <CardArea>\r\n        {cards && cards.map((card, index) => (\r\n          <Card key={index} card={card} />\r\n        ))}\r\n      </CardArea>\r\n      \r\n      {score > 0 && <ScoreChip score={score}>{score}</ScoreChip>}\r\n      \r\n      {status && <StatusBadge status={status}>\r\n        {getStatusLabel(status)}\r\n      </StatusBadge>}\r\n      \r\n      <BetCircle active={bet > 0}>\r\n        {bet > 0 && <BetAmount>${bet}</BetAmount>}\r\n      </BetCircle>\r\n    </SeatContainer>\r\n  );\r\n};\r\n\r\nexport default PlayerSeat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}