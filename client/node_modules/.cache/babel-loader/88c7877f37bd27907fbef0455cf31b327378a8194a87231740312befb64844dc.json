{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twj23\\\\Desktop\\\\Developer\\\\Games\\\\Multiplayer Blackjack Copy\\\\client\\\\src\\\\pages\\\\GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGame } from '../contexts/GameContext';\n\n// Import components\nimport PlayerSeat from '../components/PlayerSeat';\nimport DealerArea from '../components/DealerArea';\nimport PlayerControls from '../components/PlayerControls';\nimport BettingPanel from '../components/BettingPanel';\nimport Chat from '../components/Chat';\nimport GameHistory from '../components/GameHistory';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameRoomContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)), \n              url('/images/table-background.jpg') no-repeat center center/cover;\n  color: white;\n  overflow: hidden;\n`;\n_c = GameRoomContainer;\nconst GameHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 25px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-bottom: 2px solid #144b2f;\n`;\n_c2 = GameHeader;\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n_c3 = RoomInfo;\nconst RoomTitle = styled.h1`\n  font-size: 22px;\n  color: #e5c687;\n  margin: 0;\n`;\n_c4 = RoomTitle;\nconst RoomCode = styled.div`\n  background-color: #144b2f;\n  color: white;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  letter-spacing: 1px;\n`;\n_c5 = RoomCode;\nconst PlayerCount = styled.div`\n  display: flex;\n  align-items: center;\n  color: #bbb;\n  font-size: 14px;\n  \n  svg {\n    margin-right: 5px;\n  }\n`;\n_c6 = PlayerCount;\nconst LeaveButton = styled.button`\n  background-color: #d32f2f;\n  color: white;\n  border: none;\n  padding: 8px 15px;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #b71c1c;\n  }\n`;\n_c7 = LeaveButton;\nconst GameContent = styled.div`\n  display: flex;\n  height: calc(100vh - 66px); // Subtract header height\n`;\n_c8 = GameContent;\nconst GameTable = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 20px;\n  overflow: hidden;\n`;\n_c9 = GameTable;\nconst DealerSection = styled.div`\n  height: 30%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n_c10 = DealerSection;\nconst PlayersSection = styled.div`\n  height: 50%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c11 = PlayersSection;\nconst ControlsSection = styled.div`\n  height: 20%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  padding-bottom: 20px;\n`;\n_c12 = ControlsSection;\nconst SidebarContainer = styled.div`\n  width: 350px;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-left: 2px solid #144b2f;\n  display: flex;\n  flex-direction: column;\n`;\n_c13 = SidebarContainer;\nconst StartGameButton = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #e5c687;\n  color: #0a2219;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  \n  &:hover {\n    background-color: #f0d498;\n    transform: translate(-50%, -52%);\n    box-shadow: 0 7px 20px rgba(0, 0, 0, 0.4);\n  }\n`;\n_c14 = StartGameButton;\nconst WaitingMessage = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: #e5c687;\n  \n  h2 {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    font-size: 16px;\n    color: #bbb;\n    max-width: 400px;\n  }\n`;\n_c15 = WaitingMessage;\nconst ErrorMessage = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(211, 47, 47, 0.9);\n  color: white;\n  padding: 12px 20px;\n  border-radius: 5px;\n  z-index: 1000;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n`;\n_c16 = ErrorMessage;\nconst HeaderControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n_c17 = HeaderControls;\nconst ToggleButton = styled.button`\n  background-color: ${props => props.$active ? '#4caf50' : '#f44336'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: all 0.2s;\n  \n  &:hover {\n    opacity: 0.9;\n  }\n`;\n_c18 = ToggleButton;\nconst NewRoundButton = styled(StartGameButton)`\n  background-color: #9c27b0;\n  font-size: 22px;\n  padding: 18px 35px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\nconst ButtonIcon = styled.span`\n  font-size: 24px;\n`;\n\n// Add new styled components for spectators\nconst SpectatorsContainer = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-radius: 5px;\n  padding: 8px 12px;\n  max-width: 200px;\n`;\n_c19 = SpectatorsContainer;\nconst SpectatorsTitle = styled.div`\n  font-size: 14px;\n  color: #e5c687;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n_c20 = SpectatorsTitle;\nconst SpectatorsList = styled.div`\n  font-size: 12px;\n  color: #bbb;\n`;\n_c21 = SpectatorsList;\nconst SpectatorItem = styled.div`\n  margin: 2px 0;\n`;\n_c22 = SpectatorItem;\nconst GameRoom = () => {\n  _s();\n  var _players$;\n  const navigate = useNavigate();\n  const {\n    connected,\n    roomId,\n    players,\n    dealer,\n    gameState,\n    error,\n    startGame,\n    leaveRoom,\n    getCurrentPlayer,\n    isPlayerTurn,\n    currentTurn,\n    hintsEnabled,\n    toggleHints,\n    autoSkipNewRound,\n    setAutoSkipNewRound,\n    startNewRound\n  } = useGame();\n\n  // Redirect if not connected or no room joined\n  useEffect(() => {\n    if (connected && !roomId) {\n      navigate('/');\n    }\n  }, [connected, roomId, navigate]);\n\n  // Current player\n  const currentPlayer = getCurrentPlayer();\n\n  // Handler for leaving room\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/');\n  };\n\n  // Check if user is the host (first player)\n  const isHost = players.length > 0 && (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id) === ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id);\n\n  // Handler for auto-skip toggle\n  const handleAutoSkipToggle = () => {\n    setAutoSkipNewRound(!autoSkipNewRound);\n  };\n\n  // Render player seats based on number of players\n  const renderPlayerSeats = () => {\n    // Filter out players with zero balance for active play (except the host)\n    const activePlayers = players.filter(player => {\n      var _players$2;\n      return player.balance > 0 || player.id === ((_players$2 = players[0]) === null || _players$2 === void 0 ? void 0 : _players$2.id);\n    } // Keep host even with zero balance\n    );\n    return activePlayers.map((player, index) => {\n      // Check if this is the current player or a split hand of the current player\n      const isMainPlayer = player.id === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id);\n      const isSplitHandOfCurrentPlayer = player.originalPlayer === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id);\n      const isThisCurrentPlayer = isMainPlayer || isSplitHandOfCurrentPlayer;\n      return /*#__PURE__*/_jsxDEV(PlayerSeat, {\n        player: player,\n        isCurrentPlayer: isThisCurrentPlayer,\n        isPlayerTurn: player.id === currentTurn,\n        position: index,\n        gameState: gameState\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Add a function to get spectators\n  const getSpectators = () => {\n    // Players with zero balance who are not the host are spectators\n    return players.filter(player => {\n      var _players$3;\n      return player.balance <= 0 && player.id !== ((_players$3 = players[0]) === null || _players$3 === void 0 ? void 0 : _players$3.id);\n    });\n  };\n\n  // Render appropriate controls based on game state\n  const renderControls = () => {\n    var _activePlayer$cards;\n    // Get the current player (either main hand or split hand based on whose turn it is)\n    const activePlayer = getCurrentPlayer();\n\n    // Skip controls if player has blackjack\n    const hasBlackjack = (activePlayer === null || activePlayer === void 0 ? void 0 : activePlayer.status) === 'blackjack';\n\n    // Check if player can split (has exactly 2 cards with the same value)\n    const canSplit = (activePlayer === null || activePlayer === void 0 ? void 0 : (_activePlayer$cards = activePlayer.cards) === null || _activePlayer$cards === void 0 ? void 0 : _activePlayer$cards.length) === 2 && activePlayer.cards[0].value === activePlayer.cards[1].value && activePlayer.balance >= activePlayer.bet && !activePlayer.id.includes('-split'); // Can't split a split hand\n\n    if (gameState === 'betting') {\n      // Don't show betting panel for players with zero balance\n      if ((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.balance) <= 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '15px',\n            backgroundColor: 'rgba(0,0,0,0.7)',\n            borderRadius: '10px',\n            color: '#e2b714'\n          },\n          children: \"You are out of funds and will spectate this round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this);\n      }\n      const handleBetComplete = () => {\n        // This is a placeholder function that will be called when a bet is placed\n        console.log('Bet placed successfully');\n      };\n      return /*#__PURE__*/_jsxDEV(BettingPanel, {\n        onBetComplete: handleBetComplete,\n        playerBalance: (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.balance) || 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 14\n      }, this);\n    } else if (gameState === 'playing' && isPlayerTurn() && !hasBlackjack) {\n      return /*#__PURE__*/_jsxDEV(PlayerControls, {\n        currentPlayer: activePlayer,\n        canSplit: canSplit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 14\n      }, this);\n    } else if (gameState === 'ended' && isHost) {\n      return /*#__PURE__*/_jsxDEV(PlayerControls, {\n        currentPlayer: currentPlayer,\n        canSplit: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If it's not the player's turn or they have blackjack, don't show controls\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(GameRoomContainer, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GameHeader, {\n      children: [/*#__PURE__*/_jsxDEV(RoomInfo, {\n        children: [/*#__PURE__*/_jsxDEV(RoomTitle, {\n          children: \"Blackjack Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), roomId && /*#__PURE__*/_jsxDEV(RoomCode, {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(PlayerCount, {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16,21H8A1,1 0 0,1 7,20V12.07L5.7,13.07C5.31,13.46 4.68,13.46 4.29,13.07L1.46,10.29C1.07,9.9 1.07,9.27 1.46,8.88L7.34,3H9C9,4.1 10.34,5 12,5C13.66,5 15,4.1 15,3H16.66L22.54,8.88C22.93,9.27 22.93,9.9 22.54,10.29L19.71,13.12C19.32,13.5 18.69,13.5 18.3,13.12L17,12.12V20A1,1 0 0,1 16,21\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), players.length, \" Player\", players.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderControls, {\n        children: [isHost && /*#__PURE__*/_jsxDEV(ToggleButton, {\n          $active: autoSkipNewRound,\n          onClick: handleAutoSkipToggle,\n          title: autoSkipNewRound ? \"Auto Next Round\" : \"Manual Next Round\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"auto-next\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), autoSkipNewRound ? \"Auto Next Round: On\" : \"Auto Next Round: Off\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          $active: hintsEnabled,\n          onClick: toggleHints,\n          title: hintsEnabled ? \"Disable strategy hints\" : \"Enable strategy hints\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"hint\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), hintsEnabled ? \"Strategy Help: On\" : \"Strategy Help: Off\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LeaveButton, {\n          onClick: handleLeaveRoom,\n          children: \"Leave Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n      children: [/*#__PURE__*/_jsxDEV(GameTable, {\n        children: [/*#__PURE__*/_jsxDEV(DealerSection, {\n          children: (gameState === 'playing' || gameState === 'ended') && /*#__PURE__*/_jsxDEV(DealerArea, {\n            dealer: dealer,\n            gameState: gameState,\n            currentTurn: currentTurn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayersSection, {\n          children: renderPlayerSeats()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlsSection, {\n          children: renderControls()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isHost && players.length >= 2 ? /*#__PURE__*/_jsxDEV(StartGameButton, {\n            onClick: startGame,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(WaitingMessage, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Waiting for players...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isHost ? 'You need at least one more player to start the game.' : 'Waiting for the host to start the game.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), getSpectators().length > 0 && /*#__PURE__*/_jsxDEV(SpectatorsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SpectatorsTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"spectators\",\n              children: \"\\uD83D\\uDC41\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), \" Spectators\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SpectatorsList, {\n            children: getSpectators().map(spectator => /*#__PURE__*/_jsxDEV(SpectatorItem, {\n              children: spectator.username\n            }, spectator.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SidebarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameHistory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"WYqcPomjLXqMGPJzm2dvFFeC8ys=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c23 = GameRoom;\nexport default GameRoom;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n$RefreshReg$(_c, \"GameRoomContainer\");\n$RefreshReg$(_c2, \"GameHeader\");\n$RefreshReg$(_c3, \"RoomInfo\");\n$RefreshReg$(_c4, \"RoomTitle\");\n$RefreshReg$(_c5, \"RoomCode\");\n$RefreshReg$(_c6, \"PlayerCount\");\n$RefreshReg$(_c7, \"LeaveButton\");\n$RefreshReg$(_c8, \"GameContent\");\n$RefreshReg$(_c9, \"GameTable\");\n$RefreshReg$(_c10, \"DealerSection\");\n$RefreshReg$(_c11, \"PlayersSection\");\n$RefreshReg$(_c12, \"ControlsSection\");\n$RefreshReg$(_c13, \"SidebarContainer\");\n$RefreshReg$(_c14, \"StartGameButton\");\n$RefreshReg$(_c15, \"WaitingMessage\");\n$RefreshReg$(_c16, \"ErrorMessage\");\n$RefreshReg$(_c17, \"HeaderControls\");\n$RefreshReg$(_c18, \"ToggleButton\");\n$RefreshReg$(_c19, \"SpectatorsContainer\");\n$RefreshReg$(_c20, \"SpectatorsTitle\");\n$RefreshReg$(_c21, \"SpectatorsList\");\n$RefreshReg$(_c22, \"SpectatorItem\");\n$RefreshReg$(_c23, \"GameRoom\");","map":{"version":3,"names":["React","useEffect","useNavigate","styled","useGame","PlayerSeat","DealerArea","PlayerControls","BettingPanel","Chat","GameHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","GameRoomContainer","div","_c","GameHeader","header","_c2","RoomInfo","_c3","RoomTitle","h1","_c4","RoomCode","_c5","PlayerCount","_c6","LeaveButton","button","_c7","GameContent","_c8","GameTable","_c9","DealerSection","_c10","PlayersSection","_c11","ControlsSection","_c12","SidebarContainer","_c13","StartGameButton","_c14","WaitingMessage","_c15","ErrorMessage","_c16","HeaderControls","_c17","ToggleButton","props","$active","_c18","NewRoundButton","ButtonIcon","span","SpectatorsContainer","_c19","SpectatorsTitle","_c20","SpectatorsList","_c21","SpectatorItem","_c22","GameRoom","_s","_players$","navigate","connected","roomId","players","dealer","gameState","error","startGame","leaveRoom","getCurrentPlayer","isPlayerTurn","currentTurn","hintsEnabled","toggleHints","autoSkipNewRound","setAutoSkipNewRound","startNewRound","currentPlayer","handleLeaveRoom","isHost","length","id","handleAutoSkipToggle","renderPlayerSeats","activePlayers","filter","player","_players$2","balance","map","index","isMainPlayer","isSplitHandOfCurrentPlayer","originalPlayer","isThisCurrentPlayer","isCurrentPlayer","position","fileName","_jsxFileName","lineNumber","columnNumber","getSpectators","_players$3","renderControls","_activePlayer$cards","activePlayer","hasBlackjack","status","canSplit","cards","value","bet","includes","style","textAlign","padding","backgroundColor","borderRadius","color","children","handleBetComplete","console","log","onBetComplete","playerBalance","width","height","viewBox","fill","d","onClick","title","role","spectator","username","_c23","$RefreshReg$"],"sources":["C:/Users/twj23/Desktop/Developer/Games/Multiplayer Blackjack Copy/client/src/pages/GameRoom.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGame } from '../contexts/GameContext';\n\n// Import components\nimport PlayerSeat from '../components/PlayerSeat';\nimport DealerArea from '../components/DealerArea';\nimport PlayerControls from '../components/PlayerControls';\nimport BettingPanel from '../components/BettingPanel';\nimport Chat from '../components/Chat';\nimport GameHistory from '../components/GameHistory';\n\nconst GameRoomContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)), \n              url('/images/table-background.jpg') no-repeat center center/cover;\n  color: white;\n  overflow: hidden;\n`;\n\nconst GameHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 25px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-bottom: 2px solid #144b2f;\n`;\n\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst RoomTitle = styled.h1`\n  font-size: 22px;\n  color: #e5c687;\n  margin: 0;\n`;\n\nconst RoomCode = styled.div`\n  background-color: #144b2f;\n  color: white;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  letter-spacing: 1px;\n`;\n\nconst PlayerCount = styled.div`\n  display: flex;\n  align-items: center;\n  color: #bbb;\n  font-size: 14px;\n  \n  svg {\n    margin-right: 5px;\n  }\n`;\n\nconst LeaveButton = styled.button`\n  background-color: #d32f2f;\n  color: white;\n  border: none;\n  padding: 8px 15px;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #b71c1c;\n  }\n`;\n\nconst GameContent = styled.div`\n  display: flex;\n  height: calc(100vh - 66px); // Subtract header height\n`;\n\nconst GameTable = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 20px;\n  overflow: hidden;\n`;\n\nconst DealerSection = styled.div`\n  height: 30%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst PlayersSection = styled.div`\n  height: 50%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst ControlsSection = styled.div`\n  height: 20%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  padding-bottom: 20px;\n`;\n\nconst SidebarContainer = styled.div`\n  width: 350px;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-left: 2px solid #144b2f;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StartGameButton = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #e5c687;\n  color: #0a2219;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  \n  &:hover {\n    background-color: #f0d498;\n    transform: translate(-50%, -52%);\n    box-shadow: 0 7px 20px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst WaitingMessage = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: #e5c687;\n  \n  h2 {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    font-size: 16px;\n    color: #bbb;\n    max-width: 400px;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(211, 47, 47, 0.9);\n  color: white;\n  padding: 12px 20px;\n  border-radius: 5px;\n  z-index: 1000;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n`;\n\nconst HeaderControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nconst ToggleButton = styled.button`\n  background-color: ${props => props.$active ? '#4caf50' : '#f44336'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: all 0.2s;\n  \n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst NewRoundButton = styled(StartGameButton)`\n  background-color: #9c27b0;\n  font-size: 22px;\n  padding: 18px 35px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst ButtonIcon = styled.span`\n  font-size: 24px;\n`;\n\n// Add new styled components for spectators\nconst SpectatorsContainer = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-radius: 5px;\n  padding: 8px 12px;\n  max-width: 200px;\n`;\n\nconst SpectatorsTitle = styled.div`\n  font-size: 14px;\n  color: #e5c687;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nconst SpectatorsList = styled.div`\n  font-size: 12px;\n  color: #bbb;\n`;\n\nconst SpectatorItem = styled.div`\n  margin: 2px 0;\n`;\n\nconst GameRoom = () => {\n  const navigate = useNavigate();\n  const { \n    connected, roomId, players, dealer, gameState, error,\n    startGame, leaveRoom, getCurrentPlayer, isPlayerTurn, currentTurn,\n    hintsEnabled, toggleHints, autoSkipNewRound, setAutoSkipNewRound,\n    startNewRound\n  } = useGame();\n  \n  // Redirect if not connected or no room joined\n  useEffect(() => {\n    if (connected && !roomId) {\n      navigate('/');\n    }\n  }, [connected, roomId, navigate]);\n  \n  // Current player\n  const currentPlayer = getCurrentPlayer();\n  \n  // Handler for leaving room\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/');\n  };\n  \n  // Check if user is the host (first player)\n  const isHost = players.length > 0 && currentPlayer?.id === players[0]?.id;\n  \n  // Handler for auto-skip toggle\n  const handleAutoSkipToggle = () => {\n    setAutoSkipNewRound(!autoSkipNewRound);\n  };\n  \n  // Render player seats based on number of players\n  const renderPlayerSeats = () => {\n    // Filter out players with zero balance for active play (except the host)\n    const activePlayers = players.filter(player => \n      player.balance > 0 || (player.id === players[0]?.id) // Keep host even with zero balance\n    );\n    \n    return activePlayers.map((player, index) => {\n      // Check if this is the current player or a split hand of the current player\n      const isMainPlayer = player.id === currentPlayer?.id;\n      const isSplitHandOfCurrentPlayer = player.originalPlayer === currentPlayer?.id;\n      const isThisCurrentPlayer = isMainPlayer || isSplitHandOfCurrentPlayer;\n      \n      return (\n        <PlayerSeat \n          key={player.id}\n          player={player}\n          isCurrentPlayer={isThisCurrentPlayer}\n          isPlayerTurn={player.id === currentTurn}\n          position={index}\n          gameState={gameState}\n        />\n      );\n    });\n  };\n  \n  // Add a function to get spectators\n  const getSpectators = () => {\n    // Players with zero balance who are not the host are spectators\n    return players.filter(player => \n      player.balance <= 0 && player.id !== players[0]?.id\n    );\n  };\n  \n  // Render appropriate controls based on game state\n  const renderControls = () => {\n    // Get the current player (either main hand or split hand based on whose turn it is)\n    const activePlayer = getCurrentPlayer();\n    \n    // Skip controls if player has blackjack\n    const hasBlackjack = activePlayer?.status === 'blackjack';\n    \n    // Check if player can split (has exactly 2 cards with the same value)\n    const canSplit = activePlayer?.cards?.length === 2 && \n      activePlayer.cards[0].value === activePlayer.cards[1].value &&\n      activePlayer.balance >= activePlayer.bet &&\n      !activePlayer.id.includes('-split'); // Can't split a split hand\n    \n    if (gameState === 'betting') {\n      // Don't show betting panel for players with zero balance\n      if (currentPlayer?.balance <= 0) {\n        return (\n          <div style={{ \n            textAlign: 'center', \n            padding: '15px', \n            backgroundColor: 'rgba(0,0,0,0.7)',\n            borderRadius: '10px',\n            color: '#e2b714'\n          }}>\n            You are out of funds and will spectate this round\n          </div>\n        );\n      }\n      \n      const handleBetComplete = () => {\n        // This is a placeholder function that will be called when a bet is placed\n        console.log('Bet placed successfully');\n      };\n      \n      return <BettingPanel \n        onBetComplete={handleBetComplete} \n        playerBalance={currentPlayer?.balance || 0} \n      />;\n    } else if (gameState === 'playing' && isPlayerTurn() && !hasBlackjack) {\n      return <PlayerControls currentPlayer={activePlayer} canSplit={canSplit} />;\n    } else if (gameState === 'ended' && isHost) {\n      return <PlayerControls currentPlayer={currentPlayer} canSplit={false} />;\n    }\n    \n    // If it's not the player's turn or they have blackjack, don't show controls\n    return null;\n  };\n  \n  return (\n    <GameRoomContainer>\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      \n      <GameHeader>\n        <RoomInfo>\n          <RoomTitle>Blackjack Table</RoomTitle>\n          {roomId && <RoomCode>Room: {roomId}</RoomCode>}\n          <PlayerCount>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M16,21H8A1,1 0 0,1 7,20V12.07L5.7,13.07C5.31,13.46 4.68,13.46 4.29,13.07L1.46,10.29C1.07,9.9 1.07,9.27 1.46,8.88L7.34,3H9C9,4.1 10.34,5 12,5C13.66,5 15,4.1 15,3H16.66L22.54,8.88C22.93,9.27 22.93,9.9 22.54,10.29L19.71,13.12C19.32,13.5 18.69,13.5 18.3,13.12L17,12.12V20A1,1 0 0,1 16,21\"></path>\n            </svg>\n            {players.length} Player{players.length !== 1 ? 's' : ''}\n          </PlayerCount>\n        </RoomInfo>\n        \n        <HeaderControls>\n          {isHost && (\n            <ToggleButton \n              $active={autoSkipNewRound} \n              onClick={handleAutoSkipToggle}\n              title={autoSkipNewRound ? \"Auto Next Round\" : \"Manual Next Round\"}\n            >\n              <span role=\"img\" aria-label=\"auto-next\">🔄</span>\n              {autoSkipNewRound ? \"Auto Next Round: On\" : \"Auto Next Round: Off\"}\n            </ToggleButton>\n          )}\n          \n          <ToggleButton \n            $active={hintsEnabled} \n            onClick={toggleHints}\n            title={hintsEnabled ? \"Disable strategy hints\" : \"Enable strategy hints\"}\n          >\n            <span role=\"img\" aria-label=\"hint\">💡</span>\n            {hintsEnabled ? \"Strategy Help: On\" : \"Strategy Help: Off\"}\n          </ToggleButton>\n          \n          <LeaveButton onClick={handleLeaveRoom}>Leave Table</LeaveButton>\n        </HeaderControls>\n      </GameHeader>\n      \n      <GameContent>\n        <GameTable>\n          <DealerSection>\n            {(gameState === 'playing' || gameState === 'ended') && (\n              <DealerArea dealer={dealer} gameState={gameState} currentTurn={currentTurn} />\n            )}\n          </DealerSection>\n          \n          <PlayersSection>\n            {renderPlayerSeats()}\n          </PlayersSection>\n          \n          <ControlsSection>\n            {renderControls()}\n          </ControlsSection>\n          \n          {gameState === 'waiting' && (\n            <>\n              {isHost && players.length >= 2 ? (\n                <StartGameButton onClick={startGame}>\n                  Start Game\n                </StartGameButton>\n              ) : (\n                <WaitingMessage>\n                  <h2>Waiting for players...</h2>\n                  <p>\n                    {isHost \n                      ? 'You need at least one more player to start the game.' \n                      : 'Waiting for the host to start the game.'}\n                  </p>\n                </WaitingMessage>\n              )}\n            </>\n          )}\n          \n          {/* Add spectator list */}\n          {getSpectators().length > 0 && (\n            <SpectatorsContainer>\n              <SpectatorsTitle>\n                <span role=\"img\" aria-label=\"spectators\">👁️</span> Spectators\n              </SpectatorsTitle>\n              <SpectatorsList>\n                {getSpectators().map(spectator => (\n                  <SpectatorItem key={spectator.id}>\n                    {spectator.username}\n                  </SpectatorItem>\n                ))}\n              </SpectatorsList>\n            </SpectatorsContainer>\n          )}\n        </GameTable>\n        \n        <SidebarContainer>\n          <Chat />\n          <GameHistory />\n        </SidebarContainer>\n      </GameContent>\n    </GameRoomContainer>\n  );\n};\n\nexport default GameRoom; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,OAAO,QAAQ,yBAAyB;;AAEjD;AACA,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,iBAAiB,GAAGZ,MAAM,CAACa,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,iBAAiB;AAUvB,MAAMG,UAAU,GAAGf,MAAM,CAACgB,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,UAAU;AAShB,MAAMG,QAAQ,GAAGlB,MAAM,CAACa,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAJID,QAAQ;AAMd,MAAME,SAAS,GAAGpB,MAAM,CAACqB,EAAE;AAC3B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,SAAS;AAMf,MAAMG,QAAQ,GAAGvB,MAAM,CAACa,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GARID,QAAQ;AAUd,MAAME,WAAW,GAAGzB,MAAM,CAACa,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GATID,WAAW;AAWjB,MAAME,WAAW,GAAG3B,MAAM,CAAC4B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,WAAW;AAejB,MAAMG,WAAW,GAAG9B,MAAM,CAACa,GAAG;AAC9B;AACA;AACA,CAAC;AAACkB,GAAA,GAHID,WAAW;AAKjB,MAAME,SAAS,GAAGhC,MAAM,CAACa,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GAPID,SAAS;AASf,MAAME,aAAa,GAAGlC,MAAM,CAACa,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsB,IAAA,GANID,aAAa;AAQnB,MAAME,cAAc,GAAGpC,MAAM,CAACa,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACwB,IAAA,GANID,cAAc;AAQpB,MAAME,eAAe,GAAGtC,MAAM,CAACa,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,IAAA,GANID,eAAe;AAQrB,MAAME,gBAAgB,GAAGxC,MAAM,CAACa,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC4B,IAAA,GANID,gBAAgB;AAQtB,MAAME,eAAe,GAAG1C,MAAM,CAAC4B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,IAAA,GArBID,eAAe;AAuBrB,MAAME,cAAc,GAAG5C,MAAM,CAACa,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GAlBID,cAAc;AAoBpB,MAAME,YAAY,GAAG9C,MAAM,CAACa,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkC,IAAA,GAXID,YAAY;AAalB,MAAME,cAAc,GAAGhD,MAAM,CAACa,GAAG;AACjC;AACA;AACA;AACA,CAAC;AAACoC,IAAA,GAJID,cAAc;AAMpB,MAAME,YAAY,GAAGlD,MAAM,CAAC4B,MAAM;AAClC,sBAAsBuB,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}