{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twj23\\\\Desktop\\\\Developer\\\\Games\\\\Multiplayer Blackjack Copy\\\\client\\\\src\\\\pages\\\\GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGame } from '../contexts/GameContext';\n\n// Import components\nimport PlayerSeat from '../components/PlayerSeat';\nimport DealerArea from '../components/DealerArea';\nimport PlayerControls from '../components/PlayerControls';\nimport BettingPanel from '../components/BettingPanel';\nimport Chat from '../components/Chat';\nimport GameHistory from '../components/GameHistory';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameRoomContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)), \n              url('/images/table-background.jpg') no-repeat center center/cover;\n  color: white;\n  overflow: hidden;\n`;\n_c = GameRoomContainer;\nconst GameHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 25px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-bottom: 2px solid #144b2f;\n`;\n_c2 = GameHeader;\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n_c3 = RoomInfo;\nconst RoomTitle = styled.h1`\n  font-size: 22px;\n  color: #e5c687;\n  margin: 0;\n`;\n_c4 = RoomTitle;\nconst RoomCode = styled.div`\n  background-color: #144b2f;\n  color: white;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  letter-spacing: 1px;\n`;\n_c5 = RoomCode;\nconst PlayerCount = styled.div`\n  display: flex;\n  align-items: center;\n  color: #bbb;\n  font-size: 14px;\n  \n  svg {\n    margin-right: 5px;\n  }\n`;\n_c6 = PlayerCount;\nconst LeaveButton = styled.button`\n  background-color: #d32f2f;\n  color: white;\n  border: none;\n  padding: 8px 15px;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #b71c1c;\n  }\n`;\n_c7 = LeaveButton;\nconst GameContent = styled.div`\n  display: flex;\n  height: calc(100vh - 66px); // Subtract header height\n`;\n_c8 = GameContent;\nconst GameTable = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 20px;\n  overflow: hidden;\n`;\n_c9 = GameTable;\nconst DealerSection = styled.div`\n  height: 30%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n_c10 = DealerSection;\nconst PlayersSection = styled.div`\n  height: 50%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c11 = PlayersSection;\nconst ControlsSection = styled.div`\n  height: 20%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  padding-bottom: 20px;\n`;\n_c12 = ControlsSection;\nconst SidebarContainer = styled.div`\n  width: 350px;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-left: 2px solid #144b2f;\n  display: flex;\n  flex-direction: column;\n`;\n_c13 = SidebarContainer;\nconst StartGameButton = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #e5c687;\n  color: #0a2219;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  \n  &:hover {\n    background-color: #f0d498;\n    transform: translate(-50%, -52%);\n    box-shadow: 0 7px 20px rgba(0, 0, 0, 0.4);\n  }\n`;\n_c14 = StartGameButton;\nconst WaitingMessage = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: #e5c687;\n  \n  h2 {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    font-size: 16px;\n    color: #bbb;\n    max-width: 400px;\n  }\n`;\n_c15 = WaitingMessage;\nconst ErrorMessage = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(211, 47, 47, 0.9);\n  color: white;\n  padding: 12px 20px;\n  border-radius: 5px;\n  z-index: 1000;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n`;\n_c16 = ErrorMessage;\nconst HeaderControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n_c17 = HeaderControls;\nconst ToggleButton = styled.button`\n  background-color: ${props => props.$active ? '#4caf50' : '#f44336'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: all 0.2s;\n  \n  &:hover {\n    opacity: 0.9;\n  }\n`;\n_c18 = ToggleButton;\nconst GameRoom = () => {\n  _s();\n  var _players$;\n  const navigate = useNavigate();\n  const {\n    connected,\n    roomId,\n    players,\n    dealer,\n    gameState,\n    error,\n    startGame,\n    leaveRoom,\n    getCurrentPlayer,\n    isPlayerTurn,\n    currentTurn,\n    hintsEnabled,\n    toggleHints,\n    autoSkipNewRound,\n    setAutoSkipNewRound\n  } = useGame();\n\n  // Redirect if not connected or no room joined\n  useEffect(() => {\n    if (connected && !roomId) {\n      navigate('/');\n    }\n  }, [connected, roomId, navigate]);\n\n  // Current player\n  const currentPlayer = getCurrentPlayer();\n\n  // Handler for leaving room\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/');\n  };\n\n  // Check if user is the host (first player)\n  const isHost = players.length > 0 && (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id) === ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id);\n\n  // Handler for auto-skip toggle\n  const handleAutoSkipToggle = () => {\n    setAutoSkipNewRound(!autoSkipNewRound);\n  };\n\n  // Render player seats based on number of players\n  const renderPlayerSeats = () => {\n    return players.map((player, index) => {\n      // Check if this is the current player or a split hand of the current player\n      const isMainPlayer = player.id === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id);\n      const isSplitHandOfCurrentPlayer = player.originalPlayer === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.id);\n      const isThisCurrentPlayer = isMainPlayer || isSplitHandOfCurrentPlayer;\n      return /*#__PURE__*/_jsxDEV(PlayerSeat, {\n        player: player,\n        isCurrentPlayer: isThisCurrentPlayer,\n        isPlayerTurn: player.id === currentTurn,\n        position: index,\n        gameState: gameState\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Render appropriate controls based on game state\n  const renderControls = () => {\n    var _activePlayer$cards;\n    // Get the current player (either main hand or split hand based on whose turn it is)\n    const activePlayer = getCurrentPlayer();\n\n    // Skip controls if player has blackjack\n    const hasBlackjack = (activePlayer === null || activePlayer === void 0 ? void 0 : activePlayer.status) === 'blackjack';\n\n    // Check if player can split (has exactly 2 cards with the same value)\n    const canSplit = (activePlayer === null || activePlayer === void 0 ? void 0 : (_activePlayer$cards = activePlayer.cards) === null || _activePlayer$cards === void 0 ? void 0 : _activePlayer$cards.length) === 2 && activePlayer.cards[0].value === activePlayer.cards[1].value && activePlayer.balance >= activePlayer.bet && !activePlayer.id.includes('-split'); // Can't split a split hand\n\n    if (gameState === 'betting') {\n      // Don't show betting panel for players with zero balance\n      if ((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.balance) <= 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '15px',\n            backgroundColor: 'rgba(0,0,0,0.7)',\n            borderRadius: '10px',\n            color: '#e2b714'\n          },\n          children: \"You are out of funds and will spectate this round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this);\n      }\n      const handleBetComplete = () => {\n        // This is a placeholder function that will be called when a bet is placed\n        console.log('Bet placed successfully');\n      };\n      return /*#__PURE__*/_jsxDEV(BettingPanel, {\n        onBetComplete: handleBetComplete,\n        playerBalance: (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.balance) || 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 14\n      }, this);\n    } else if (gameState === 'playing' && isPlayerTurn() && !hasBlackjack) {\n      return /*#__PURE__*/_jsxDEV(PlayerControls, {\n        currentPlayer: activePlayer,\n        canSplit: canSplit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 14\n      }, this);\n    } else if (gameState === 'ended') {\n      return /*#__PURE__*/_jsxDEV(PlayerControls, {\n        currentPlayer: currentPlayer,\n        canSplit: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If it's not the player's turn or they have blackjack, don't show controls\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(GameRoomContainer, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GameHeader, {\n      children: [/*#__PURE__*/_jsxDEV(RoomInfo, {\n        children: [/*#__PURE__*/_jsxDEV(RoomTitle, {\n          children: \"Blackjack Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), roomId && /*#__PURE__*/_jsxDEV(RoomCode, {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(PlayerCount, {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16,21H8A1,1 0 0,1 7,20V12.07L5.7,13.07C5.31,13.46 4.68,13.46 4.29,13.07L1.46,10.29C1.07,9.9 1.07,9.27 1.46,8.88L7.34,3H9C9,4.1 10.34,5 12,5C13.66,5 15,4.1 15,3H16.66L22.54,8.88C22.93,9.27 22.93,9.9 22.54,10.29L19.71,13.12C19.32,13.5 18.69,13.5 18.3,13.12L17,12.12V20A1,1 0 0,1 16,21\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), players.length, \" Player\", players.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderControls, {\n        children: [isHost && /*#__PURE__*/_jsxDEV(ToggleButton, {\n          $active: autoSkipNewRound,\n          onClick: handleAutoSkipToggle,\n          title: autoSkipNewRound ? \"Disable auto-skip to new round\" : \"Enable auto-skip to new round\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"auto-skip\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), autoSkipNewRound ? \"Auto-Skip: On\" : \"Auto-Skip: Off\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          $active: hintsEnabled,\n          onClick: toggleHints,\n          title: hintsEnabled ? \"Disable strategy hints\" : \"Enable strategy hints\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"hint\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), hintsEnabled ? \"Strategy Help: On\" : \"Strategy Help: Off\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LeaveButton, {\n          onClick: handleLeaveRoom,\n          children: \"Leave Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n      children: [/*#__PURE__*/_jsxDEV(GameTable, {\n        children: [/*#__PURE__*/_jsxDEV(DealerSection, {\n          children: (gameState === 'playing' || gameState === 'ended') && /*#__PURE__*/_jsxDEV(DealerArea, {\n            dealer: dealer,\n            gameState: gameState,\n            currentTurn: currentTurn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayersSection, {\n          children: renderPlayerSeats()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlsSection, {\n          children: renderControls()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isHost && players.length >= 2 ? /*#__PURE__*/_jsxDEV(StartGameButton, {\n            onClick: startGame,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(WaitingMessage, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Waiting for players...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isHost ? 'You need at least one more player to start the game.' : 'Waiting for the host to start the game.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SidebarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameHistory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"griShKFUjQbxts8TG/YH0l5OXXk=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c19 = GameRoom;\nexport default GameRoom;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"GameRoomContainer\");\n$RefreshReg$(_c2, \"GameHeader\");\n$RefreshReg$(_c3, \"RoomInfo\");\n$RefreshReg$(_c4, \"RoomTitle\");\n$RefreshReg$(_c5, \"RoomCode\");\n$RefreshReg$(_c6, \"PlayerCount\");\n$RefreshReg$(_c7, \"LeaveButton\");\n$RefreshReg$(_c8, \"GameContent\");\n$RefreshReg$(_c9, \"GameTable\");\n$RefreshReg$(_c10, \"DealerSection\");\n$RefreshReg$(_c11, \"PlayersSection\");\n$RefreshReg$(_c12, \"ControlsSection\");\n$RefreshReg$(_c13, \"SidebarContainer\");\n$RefreshReg$(_c14, \"StartGameButton\");\n$RefreshReg$(_c15, \"WaitingMessage\");\n$RefreshReg$(_c16, \"ErrorMessage\");\n$RefreshReg$(_c17, \"HeaderControls\");\n$RefreshReg$(_c18, \"ToggleButton\");\n$RefreshReg$(_c19, \"GameRoom\");","map":{"version":3,"names":["React","useEffect","useNavigate","styled","useGame","PlayerSeat","DealerArea","PlayerControls","BettingPanel","Chat","GameHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","GameRoomContainer","div","_c","GameHeader","header","_c2","RoomInfo","_c3","RoomTitle","h1","_c4","RoomCode","_c5","PlayerCount","_c6","LeaveButton","button","_c7","GameContent","_c8","GameTable","_c9","DealerSection","_c10","PlayersSection","_c11","ControlsSection","_c12","SidebarContainer","_c13","StartGameButton","_c14","WaitingMessage","_c15","ErrorMessage","_c16","HeaderControls","_c17","ToggleButton","props","$active","_c18","GameRoom","_s","_players$","navigate","connected","roomId","players","dealer","gameState","error","startGame","leaveRoom","getCurrentPlayer","isPlayerTurn","currentTurn","hintsEnabled","toggleHints","autoSkipNewRound","setAutoSkipNewRound","currentPlayer","handleLeaveRoom","isHost","length","id","handleAutoSkipToggle","renderPlayerSeats","map","player","index","isMainPlayer","isSplitHandOfCurrentPlayer","originalPlayer","isThisCurrentPlayer","isCurrentPlayer","position","fileName","_jsxFileName","lineNumber","columnNumber","renderControls","_activePlayer$cards","activePlayer","hasBlackjack","status","canSplit","cards","value","balance","bet","includes","style","textAlign","padding","backgroundColor","borderRadius","color","children","handleBetComplete","console","log","onBetComplete","playerBalance","width","height","viewBox","fill","d","onClick","title","role","_c19","$RefreshReg$"],"sources":["C:/Users/twj23/Desktop/Developer/Games/Multiplayer Blackjack Copy/client/src/pages/GameRoom.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useGame } from '../contexts/GameContext';\n\n// Import components\nimport PlayerSeat from '../components/PlayerSeat';\nimport DealerArea from '../components/DealerArea';\nimport PlayerControls from '../components/PlayerControls';\nimport BettingPanel from '../components/BettingPanel';\nimport Chat from '../components/Chat';\nimport GameHistory from '../components/GameHistory';\n\nconst GameRoomContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)), \n              url('/images/table-background.jpg') no-repeat center center/cover;\n  color: white;\n  overflow: hidden;\n`;\n\nconst GameHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 25px;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-bottom: 2px solid #144b2f;\n`;\n\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst RoomTitle = styled.h1`\n  font-size: 22px;\n  color: #e5c687;\n  margin: 0;\n`;\n\nconst RoomCode = styled.div`\n  background-color: #144b2f;\n  color: white;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  letter-spacing: 1px;\n`;\n\nconst PlayerCount = styled.div`\n  display: flex;\n  align-items: center;\n  color: #bbb;\n  font-size: 14px;\n  \n  svg {\n    margin-right: 5px;\n  }\n`;\n\nconst LeaveButton = styled.button`\n  background-color: #d32f2f;\n  color: white;\n  border: none;\n  padding: 8px 15px;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #b71c1c;\n  }\n`;\n\nconst GameContent = styled.div`\n  display: flex;\n  height: calc(100vh - 66px); // Subtract header height\n`;\n\nconst GameTable = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 20px;\n  overflow: hidden;\n`;\n\nconst DealerSection = styled.div`\n  height: 30%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst PlayersSection = styled.div`\n  height: 50%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst ControlsSection = styled.div`\n  height: 20%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  padding-bottom: 20px;\n`;\n\nconst SidebarContainer = styled.div`\n  width: 350px;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-left: 2px solid #144b2f;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StartGameButton = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #e5c687;\n  color: #0a2219;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  \n  &:hover {\n    background-color: #f0d498;\n    transform: translate(-50%, -52%);\n    box-shadow: 0 7px 20px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst WaitingMessage = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: #e5c687;\n  \n  h2 {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    font-size: 16px;\n    color: #bbb;\n    max-width: 400px;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(211, 47, 47, 0.9);\n  color: white;\n  padding: 12px 20px;\n  border-radius: 5px;\n  z-index: 1000;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n`;\n\nconst HeaderControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nconst ToggleButton = styled.button`\n  background-color: ${props => props.$active ? '#4caf50' : '#f44336'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: all 0.2s;\n  \n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst GameRoom = () => {\n  const navigate = useNavigate();\n  const { \n    connected, roomId, players, dealer, gameState, error,\n    startGame, leaveRoom, getCurrentPlayer, isPlayerTurn, currentTurn,\n    hintsEnabled, toggleHints, autoSkipNewRound, setAutoSkipNewRound\n  } = useGame();\n  \n  // Redirect if not connected or no room joined\n  useEffect(() => {\n    if (connected && !roomId) {\n      navigate('/');\n    }\n  }, [connected, roomId, navigate]);\n  \n  // Current player\n  const currentPlayer = getCurrentPlayer();\n  \n  // Handler for leaving room\n  const handleLeaveRoom = () => {\n    leaveRoom();\n    navigate('/');\n  };\n  \n  // Check if user is the host (first player)\n  const isHost = players.length > 0 && currentPlayer?.id === players[0]?.id;\n  \n  // Handler for auto-skip toggle\n  const handleAutoSkipToggle = () => {\n    setAutoSkipNewRound(!autoSkipNewRound);\n  };\n  \n  // Render player seats based on number of players\n  const renderPlayerSeats = () => {\n    return players.map((player, index) => {\n      // Check if this is the current player or a split hand of the current player\n      const isMainPlayer = player.id === currentPlayer?.id;\n      const isSplitHandOfCurrentPlayer = player.originalPlayer === currentPlayer?.id;\n      const isThisCurrentPlayer = isMainPlayer || isSplitHandOfCurrentPlayer;\n      \n      return (\n        <PlayerSeat \n          key={player.id}\n          player={player}\n          isCurrentPlayer={isThisCurrentPlayer}\n          isPlayerTurn={player.id === currentTurn}\n          position={index}\n          gameState={gameState}\n        />\n      );\n    });\n  };\n  \n  // Render appropriate controls based on game state\n  const renderControls = () => {\n    // Get the current player (either main hand or split hand based on whose turn it is)\n    const activePlayer = getCurrentPlayer();\n    \n    // Skip controls if player has blackjack\n    const hasBlackjack = activePlayer?.status === 'blackjack';\n    \n    // Check if player can split (has exactly 2 cards with the same value)\n    const canSplit = activePlayer?.cards?.length === 2 && \n      activePlayer.cards[0].value === activePlayer.cards[1].value &&\n      activePlayer.balance >= activePlayer.bet &&\n      !activePlayer.id.includes('-split'); // Can't split a split hand\n    \n    if (gameState === 'betting') {\n      // Don't show betting panel for players with zero balance\n      if (currentPlayer?.balance <= 0) {\n        return (\n          <div style={{ \n            textAlign: 'center', \n            padding: '15px', \n            backgroundColor: 'rgba(0,0,0,0.7)',\n            borderRadius: '10px',\n            color: '#e2b714'\n          }}>\n            You are out of funds and will spectate this round\n          </div>\n        );\n      }\n      \n      const handleBetComplete = () => {\n        // This is a placeholder function that will be called when a bet is placed\n        console.log('Bet placed successfully');\n      };\n      \n      return <BettingPanel \n        onBetComplete={handleBetComplete} \n        playerBalance={currentPlayer?.balance || 0} \n      />;\n    } else if (gameState === 'playing' && isPlayerTurn() && !hasBlackjack) {\n      return <PlayerControls currentPlayer={activePlayer} canSplit={canSplit} />;\n    } else if (gameState === 'ended') {\n      return <PlayerControls currentPlayer={currentPlayer} canSplit={false} />;\n    }\n    \n    // If it's not the player's turn or they have blackjack, don't show controls\n    return null;\n  };\n  \n  return (\n    <GameRoomContainer>\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      \n      <GameHeader>\n        <RoomInfo>\n          <RoomTitle>Blackjack Table</RoomTitle>\n          {roomId && <RoomCode>Room: {roomId}</RoomCode>}\n          <PlayerCount>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M16,21H8A1,1 0 0,1 7,20V12.07L5.7,13.07C5.31,13.46 4.68,13.46 4.29,13.07L1.46,10.29C1.07,9.9 1.07,9.27 1.46,8.88L7.34,3H9C9,4.1 10.34,5 12,5C13.66,5 15,4.1 15,3H16.66L22.54,8.88C22.93,9.27 22.93,9.9 22.54,10.29L19.71,13.12C19.32,13.5 18.69,13.5 18.3,13.12L17,12.12V20A1,1 0 0,1 16,21\"></path>\n            </svg>\n            {players.length} Player{players.length !== 1 ? 's' : ''}\n          </PlayerCount>\n        </RoomInfo>\n        \n        <HeaderControls>\n          {isHost && (\n            <ToggleButton \n              $active={autoSkipNewRound} \n              onClick={handleAutoSkipToggle}\n              title={autoSkipNewRound ? \"Disable auto-skip to new round\" : \"Enable auto-skip to new round\"}\n            >\n              <span role=\"img\" aria-label=\"auto-skip\">🔄</span>\n              {autoSkipNewRound ? \"Auto-Skip: On\" : \"Auto-Skip: Off\"}\n            </ToggleButton>\n          )}\n          \n          <ToggleButton \n            $active={hintsEnabled} \n            onClick={toggleHints}\n            title={hintsEnabled ? \"Disable strategy hints\" : \"Enable strategy hints\"}\n          >\n            <span role=\"img\" aria-label=\"hint\">💡</span>\n            {hintsEnabled ? \"Strategy Help: On\" : \"Strategy Help: Off\"}\n          </ToggleButton>\n          \n          <LeaveButton onClick={handleLeaveRoom}>Leave Table</LeaveButton>\n        </HeaderControls>\n      </GameHeader>\n      \n      <GameContent>\n        <GameTable>\n          <DealerSection>\n            {(gameState === 'playing' || gameState === 'ended') && (\n              <DealerArea dealer={dealer} gameState={gameState} currentTurn={currentTurn} />\n            )}\n          </DealerSection>\n          \n          <PlayersSection>\n            {renderPlayerSeats()}\n          </PlayersSection>\n          \n          <ControlsSection>\n            {renderControls()}\n          </ControlsSection>\n          \n          {gameState === 'waiting' && (\n            <>\n              {isHost && players.length >= 2 ? (\n                <StartGameButton onClick={startGame}>\n                  Start Game\n                </StartGameButton>\n              ) : (\n                <WaitingMessage>\n                  <h2>Waiting for players...</h2>\n                  <p>\n                    {isHost \n                      ? 'You need at least one more player to start the game.' \n                      : 'Waiting for the host to start the game.'}\n                  </p>\n                </WaitingMessage>\n              )}\n            </>\n          )}\n        </GameTable>\n        \n        <SidebarContainer>\n          <Chat />\n          <GameHistory />\n        </SidebarContainer>\n      </GameContent>\n    </GameRoomContainer>\n  );\n};\n\nexport default GameRoom; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,OAAO,QAAQ,yBAAyB;;AAEjD;AACA,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,iBAAiB,GAAGZ,MAAM,CAACa,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,iBAAiB;AAUvB,MAAMG,UAAU,GAAGf,MAAM,CAACgB,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,UAAU;AAShB,MAAMG,QAAQ,GAAGlB,MAAM,CAACa,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAJID,QAAQ;AAMd,MAAME,SAAS,GAAGpB,MAAM,CAACqB,EAAE;AAC3B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,SAAS;AAMf,MAAMG,QAAQ,GAAGvB,MAAM,CAACa,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GARID,QAAQ;AAUd,MAAME,WAAW,GAAGzB,MAAM,CAACa,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GATID,WAAW;AAWjB,MAAME,WAAW,GAAG3B,MAAM,CAAC4B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,WAAW;AAejB,MAAMG,WAAW,GAAG9B,MAAM,CAACa,GAAG;AAC9B;AACA;AACA,CAAC;AAACkB,GAAA,GAHID,WAAW;AAKjB,MAAME,SAAS,GAAGhC,MAAM,CAACa,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GAPID,SAAS;AASf,MAAME,aAAa,GAAGlC,MAAM,CAACa,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsB,IAAA,GANID,aAAa;AAQnB,MAAME,cAAc,GAAGpC,MAAM,CAACa,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACwB,IAAA,GANID,cAAc;AAQpB,MAAME,eAAe,GAAGtC,MAAM,CAACa,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,IAAA,GANID,eAAe;AAQrB,MAAME,gBAAgB,GAAGxC,MAAM,CAACa,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC4B,IAAA,GANID,gBAAgB;AAQtB,MAAME,eAAe,GAAG1C,MAAM,CAAC4B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,IAAA,GArBID,eAAe;AAuBrB,MAAME,cAAc,GAAG5C,MAAM,CAACa,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GAlBID,cAAc;AAoBpB,MAAME,YAAY,GAAG9C,MAAM,CAACa,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkC,IAAA,GAXID,YAAY;AAalB,MAAME,cAAc,GAAGhD,MAAM,CAACa,GAAG;AACjC;AACA;AACA;AACA,CAAC;AAACoC,IAAA,GAJID,cAAc;AAMpB,MAAME,YAAY,GAAGlD,MAAM,CAAC4B,MAAM;AAClC,sBAAsBuB,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}